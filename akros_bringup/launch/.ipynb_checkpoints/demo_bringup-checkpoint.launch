<?xml version="1.0"?>
<launch>
    <!-- ARGUMENTS - BRINGUP -->
    <arg name="rosboard" default="true"/>
    <arg name="t265_tf" default="false"/> <!-- false is preferred, to keep the tf tree continuous -->
    <arg name="ekf_fusion" default="true"/> <!-- if false, on-board encoder fusion is used -->
    
    <!-- ARGUMENTS - T265 -->
    <arg name="enable_fisheye"  default="false"/>
    <arg name="calib_odom_file" default="$(find akros_bringup)/config/t265_encoder_config.json"/>
    <arg name="topic_odom_in"   default="/enc/odom"/>
    
    <!-- ARGUMENTS - TELEOP -->
    <arg name="teleop_ns"   default="teleop"/>
    <arg name="auto_ns"     default="auto"/>
    <arg name="mixer_ns"    default="twist_mixer"/>
    
    <!-- ARGUMENTS - ARDUINO ODOMETRY -->
    <arg name="encoder_odom_frame" default="enc_odom_frame"/>

    <!-- INCLUDE DESCRIPTION LAUNCH FILE -->
    <include file="$(find akros_description)/launch/akros_description.launch">
        <arg name="t265" value="$(arg t265_tf)"/>
    </include>
   
    <!-- INCLUDE LIDAR LAUNCH FILE -->
    <include file="$(find akros_bringup)/launch/ldlidar_ld06.launch"/>
    
    <!-- INCLUDE T265 LAUNCH FILE -->
    <include file="$(find akros_bringup)/launch/rs_t265.launch">
        <arg name="enable_fisheye1" value="$(arg enable_fisheye)"/>
        <arg name="enable_fisheye2" value="$(arg enable_fisheye)"/>
        <arg name="publish_odom_tf" value="$(arg t265_tf)"/>
        <arg name="calib_odom_file" value="$(arg calib_odom_file)" unless="$(arg ekf_fusion)"/>
        <arg name="topic_odom_in"   value="$(arg topic_odom_in)" unless="$(arg ekf_fusion)"/>
    </include>
    
    <!--USE T265 TF DIRECTLY, PUBLISH DUMMY TRANSFORM FOR ENCODER ODOM -->
    <group if="$(arg t265_tf)">
        <!-- LAUNCH EKF NODE-->
        <!-- ENC_ODOM_FRAME -> BASE_FOOTPRINT TRANSFORM-->
        <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="ekf_enc_only">
            <param name="output_frame" value="enc_odom_frame"/>
            <param name="base_footprint_frame" value="base_footprint"/>
            <param name="freq" value="100.0"/>
            <param name="sensor_timeout" value="1.0"/>
            <param name="odom_used" value="true"/>
            <param name="imu_used" value="false"/>
            <param name="vo_used" value="false"/>
            <param name="debug" value="false"/>
            <param name="self_diagnose" value="true"/>
            <remap from="odom_data" to="/enc/odom"/>
            <remap from="/robot_pose_ekf/odom_combined" to="enc/odom/filtered"/>
        </node>
    </group>
    
    <!--USE T265 WITH ENCODER ODOMETRY-->
    <group unless="$(arg t265_tf)">
        <!--LAUNCH ROBOT_POSE_EKF TO FUSE T265 VIO and ENCODER ODOM-->
        <!-- T265_ODOM_FRAME -> BASE_LINK TRANSFORM-->
        <group if="$(arg ekf_fusion)">
            <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="ekf_t265_enc">
                <param name="output_frame" value="t265_odom_frame"/>
                <param name="base_footprint_frame" value="base_link"/>
                <param name="freq" value="100.0"/>
                <param name="sensor_timeout" value="1.0"/>
                <param name="odom_used" value="true"/>
                <param name="imu_used" value="false"/>
                <param name="vo_used" value="true"/>
                <param name="debug" value="false"/>
                <param name="self_diagnose" value="true"/>
                <remap from="odom_data" to="/enc/odom"/>
                <remap from="vo" to="/t265/odom/sample"/>
                <remap from="/robot_pose_ekf/odom_combined" to="t265/odom/combined"/>
            </node>
        </group>
    </group>
    
    <!--LAUNCH ROBOT_LOCALIZATION TO FILTER T265 VIO (FUSED WITH/WITHOUT ENCODER ODOM) FOR TF TREE COMPLETENESS-->
    <!-- T265_ODOM_FRAME -> BASE_LINK TRANSFORM PUBLISHED ONLY IF T265_TF IS FALSE-->
    <group unless="$(arg ekf_fusion)">
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_t265_filter" clear_params="true">
            <rosparam command="load" file="$(find akros_bringup)/config/t265_ekf_params.yaml" />
            <param name="imu0" value="t265/odom/sample"/>
            <param name="publish_tf" value="false" if="$(arg t265_tf)"/>
            <remap from="/odometry/filtered" to="t265/odom/filtered"/>
        </node>
    </group>
    
    <!-- LAUNCH TWIST_MIXER NODE -->
    <node pkg="akros_bringup" type="twist_mixer.py" name="twist_mixer">
        <remap from="teleop_cmd_vel"    to="$(arg teleop_ns)/cmd_vel" />
        <remap from="auto_cmd_vel"      to="$(arg auto_ns)/cmd_vel" />
        <remap from="mode"              to="$(arg teleop_ns)/mode"/>
        <remap from="cmd_vel"           to="$(arg mixer_ns)/cmd_vel"/>
    </node>
    
    <!-- LAUNCH TWIST_MUX NODE (ESTOP) -->
    <node pkg="twist_mux" type="twist_mux" name="twist_mux">
        <rosparam file="$(find akros_bringup)/config/twist_mux_config.yaml" command="load" />
        <remap from="cmd_vel_out" to="/cmd_vel"/>
    </node>
    
    <!-- INCLUDE ROSSERIAL ARDUINO LAUNCH FILE -->
    <include file="$(find akros_bringup)/launch/rosserial_arduino.launch">
        <arg name="odom_frame_id" value="$(arg encoder_odom_frame)"/>
    </include>
    
    <!-- INCLUDE DS4 CONTROLLER LAUNCH FILE -->
    <include file="$(find akros_teleop)/launch/ds4_drive.launch">
        <arg name="standalone" value="false"/>
    </include>
    
    <!-- LAUNCH ROSBOARD -->
    <group if="$(arg rosboard)">
        <node pkg="rosboard" type="rosboard_node" name="rosboard"/>
    </group>

</launch>
