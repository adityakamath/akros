<?xml version="1.0"?>
<launch>
    <!-- ARGUMENTS - BRINGUP -->
    <arg name="mode" default="3d" doc="modes [2d, 3d]"/>
    <arg name="lidar" default="ldlidar_ld06" doc="lidar [ldlidar_ld06, rplidar_a2]"/>
    
    <!-- ARGUMENTS - OAKD -->
    <arg name="camera_name" default="oakd"/>
    <arg name="oakd_mode"   default="rgbd" doc="OAK-D Modes [rgbd, stereo (only for testing/debugging)]"/>
    <arg name="nodelet"     default="false"/>
    
    <!-- ARGUMENTS - T265 -->
    <arg name="enable_fisheye"  default="true"/>
    <arg name="publish_odom_tf" default="true"/> <!-- if false EKF is used, if true t265 odom to pose tf used -->
    
    <!-- ARGUMENTS - ASSISTED TELEOP -->
    <arg name="assisted_ns" default="assisted"/>
    <arg name="teleop_ns"   default="teleop"/>
    <arg name="auto_ns"     default="auto"/>
    <arg name="mixer_ns"    default="twist_mixer"/>
    <arg name="odom_topic"  default="t265/odom/sample"/>

    <!-- INCLUDE DESCRIPTION LAUNCH FILE -->
    <include file="$(find akros_description)/launch/akros_description.launch" />
    
    <!-- INCLUDE T265 LAUNCH FILE -->
    <include file="$(find akros_bringup)/launch/rs_t265.launch">
        <arg name="enable_fisheye1" value="$(arg enable_fisheye)"/>
        <arg name="enable_fisheye2" value="$(arg enable_fisheye)"/>
        <arg name="publish_odom_tf" value="$(arg publish_odom_tf)"/>
    </include>
   
    <!-- INCLUDE RPLIDAR LAUNCH FILE -->
    <include file="$(find akros_bringup)/launch/$(arg lidar).launch"/>
    
    <!-- IF 3D, LAUNCH OAK-D -->
    <group if="$(eval arg('mode') == '3d')"> 
        <!-- INCLUDE OAK-D LAUNCH FILE -->
        <include file="$(find akros_bringup)/launch/demo_oakd.launch">
            <arg name="camera_name" value="$(arg camera_name)"/>
            <arg name="oakd_mode" value="$(arg oakd_mode)"/>
            <arg name="standalone" value="false"/>
        </include>
    </group>
    
    <!-- INCLUDE DS4 CONTROLLER LAUNCH FILE -->
    <include file="$(find akros_teleop)/launch/ds4_drive.launch">
        <arg name="standalone" value="false"/>
    </include>
    
    <!-- INCLUDE ROSSERIAL ARDUINO LAUNCH FILE -->
    <include file="$(find akros_bringup)/launch/rosserial_arduino.launch"/>
    
    <!-- LAUNCH TWIST_MIXER NODE -->
    <node pkg="akros_bringup" type="twist_mixer.py" name="twist_mixer">
        <remap from="teleop_cmd_vel"    to="$(arg teleop_ns)/cmd_vel" />
        <remap from="assisted_cmd_vel"  to="$(arg assisted_ns)/cmd_vel/filtered" />
        <remap from="auto_cmd_vel"      to="$(arg auto_ns)/cmd_vel" />
        <remap from="mode"              to="$(arg teleop_ns)/mode"/>
        <remap from="cmd_vel"           to="$(arg mixer_ns)/cmd_vel"/>
        <remap from="pre_assist_cmd_vel" to="$(arg assisted_ns)/cmd_vel/unfiltered" />
    </node>
    
    <!-- LAUNCH INTERACTIVE_MARKER_TWIST_SERVER NODE -->
    <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server">
        <rosparam command="load" file="$(find akros_bringup)/config/holonomic_twist_marker.yaml" />
    </node>
    
    <!-- LAUNCH TWIST_MUX NODE -->
    <node pkg="twist_mux" type="twist_mux" name="twist_mux">
        <rosparam file="$(find akros_bringup)/config/twist_mux_config.yaml" command="load" />
        <remap from="cmd_vel_out" to="cmd_vel"/>
    </node>
    
    <!-- LAUNCH ASSISTED_TELEOP NODE -->
    <param name="/use_sim_time" value="false"/>
    <node pkg="assisted_teleop" name="assisted_teleop" type="assisted_teleop" respawn="false">
        <rosparam file="$(find akros_teleop)/config/assisted_teleop_params.yaml" command="load" />
        <remap from="teleop_cmd_vel" to="$(arg assisted_ns)/cmd_vel/unfiltered" />
        <remap from="cmd_vel" to="$(arg assisted_ns)/cmd_vel/filtered" />
        <remap from="odom" to="$(arg odom_topic)"/>
    </node>
    
    <!-- SUPPRESS WARNING MESSAGES FROM ASSISTED_TELEOP LOCAL PLANNER -->
    <node pkg="rosservice" type="rosservice" name="supress_warn" args="call --wait /assisted_teleop/set_logger_level 'ros.base_local_planner' 'fatal'" />

</launch>
