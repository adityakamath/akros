<?xml version="1.0"?>
<launch>
    <!-- <args for urdf/> -->
    <arg name="system_name"          default="akros"/>
    <arg name="camera_model"         default="BW1098OAK" /> <!-- 'zed' or 'zedm' -->
    <arg name="camera_name"          default="oakd" />
    <arg name="camera_base_frame"    default="oakd_frame" />
    <arg name="cam_pos_x"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_y"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_z"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="1.5708" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_pitch"             default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_yaw"               default="1.5708" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    
    <param name="$(arg system_name)_description"
               command="$(find xacro)/xacro '$(find akros_test)/urdf/akros_top.urdf.xacro'
                        camera_name:=$(arg camera_name)
                        camera_model:=$(arg camera_model)
                        base_frame:=$(arg camera_base_frame)
                        cam_pos_x:=$(arg cam_pos_x)
                        cam_pos_y:=$(arg cam_pos_y)
                        cam_pos_z:=$(arg cam_pos_z)
                        cam_roll:=$(arg cam_roll)
                        cam_pitch:=$(arg cam_pitch)
                        cam_yaw:=$(arg cam_yaw)"/>

    <!-- args for stereo node -->
    <arg name="nodeName"              default="rgbd_pub"/>
    <arg name="outputDepth"           default="true" /> 
    <arg name="outputRectified"       default="true" /> 
    <arg name="lrcheck"               default="true" /> 
    <arg name="extended"              default="false" /> 
    <arg name="subpixel"              default="false" />
    <arg name="camera_param_uri"      default="package://depthai_nodes/params/camera" />

    <node name="$(arg nodeName)" pkg="depthai_nodes" type="rgbd_node" output="screen" required="true">
        <param name="camera_name" value="$(arg camera_name)"/>
        <param name="camera_param_uri" value="$(arg camera_param_uri)"/>
        <param name="outputDepth" value="$(arg outputDepth)"/>
        <param name="outputRectified" value="$(arg outputRectified)"/>
        <param name="lrcheck" value="$(arg lrcheck)"/>
        <param name="extended" value="$(arg extended)"/>
        <param name="subpixel" value="$(arg subpixel)"/>
    </node>
    
    <!-- args for rplidar node -->
    <arg name="ns"          default="rplidar"/>
    <arg name="lidar_name"  default="rplidar"/>

    <group ns="$(arg ns)">
    <!-- Launch the RPLidar node -->
    <node name="rplidarNode" pkg="rplidar_ros"  type="rplidarNode" output="screen">
        <!-- arg name="use_gdb" default="false"/ -->
        <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2, 256000 for A3-->
        <param name="frame_id"            type="string" value="laser_frame"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
    </node>
    </group>
    
    <!-- depth_image_proc nodelet -->
    <node pkg="nodelet" type="nodelet" name="pointcloud_manager"  args="manager" output="screen"/>
    
    <!-- <node pkg="nodelet" type="nodelet" name="nodelet_manager"  args="manager" output="screen">
        <param name="camera_name" value="$(arg camera_name)"/>
        <param name="camera_param_uri" value="$(arg camera_param_uri)"/>
    </node> -->

    <!-- node pkg="nodelet" type="nodelet" name="depth_convert"
        args="load depth_image_proc/convert_metric pointcloud_manager">
        <remap from="image_raw" to="/$(arg nodeName)/stereo/depth"/>    
        <remap from="image" to="/$(arg nodeName)/stereo/depth_m"/>
    </node -->

    <!-- node pkg="nodelet" type="nodelet" name="depth_pointcloud"
        args="load depth_image_proc/point_cloud_xyz pointcloud_manager">
        <remap from="camera_info" to="/$(arg nodeName)/stereo/camera_info"/>
        <remap from="image_rect" to="/$(arg nodeName)/stereo/depth"/>    
        <remap from="points" to="/$(arg nodeName)/pointcloud/points"/>
    </node -->
    
    <node pkg="nodelet" type="nodelet" name="depth_rgb_register" 
        args="load depth_image_proc/register pointcloud_manager">   
        <remap from="rgb/camera_info" to="/$(arg nodeName)/color/camera_info"/> 
        <remap from="depth/camera_info" to="/$(arg nodeName)/stereo/camera_info"/>
        <remap from="depth/image_rect" to="/$(arg nodeName)/stereo/depth"/>
        <remap from="depth_registered/camera_info" to="/$(arg nodeName)/stereo_rect/camera_info"/>
        <remap from="depth_registered/image_rect" to="/$(arg nodeName)/stereo_rect/depth"/>
    </node>
       
    <node pkg="nodelet" type="nodelet" name="depth_pointcloud_rgb" 
        args="load depth_image_proc/point_cloud_xyzrgb pointcloud_manager"> 
        <remap from="rgb/camera_info" to="/$(arg nodeName)/color/camera_info"/>    
        <remap from="rgb/image_rect_color" to="/$(arg nodeName)/color/image"/>
        <remap from="depth_registered/image_rect" to="/$(arg nodeName)/stereo_rect/depth"/>
        <remap from="depth_registered/points" to="/$(arg nodeName)/pointcloud/points_rgb"/>
    </node>
    
    <!-- state publisher node -->
    <node name="$(arg system_name)_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" required="true">
        <remap from="robot_description" to="$(arg system_name)_description" />
    </node> 

</launch>
