<?xml version="1.0"?>
<launch>
    
    <arg name="pub_fiducials" default="false"/>
    <arg name="pub_detections" default="false"/>

    <include file="$(find akros_test)/launch/base_launch/pointcloud_nnd.launch">
        <arg name="pub_detections" value="$(arg pub_detections)"/>
    </include> 
    <arg name="nodeName" default="nnd_pub"/>
    
    <!-- DETECT ARUCO MARKERS -->
    <arg name="fiducial_len" default="0.068"/>
    <arg name="dictionary" default="7"/>
    <arg name="do_pose_estimation" default="true"/>
    <arg name="vis_msgs" default="false"/>
    <arg name="ignore_fiducials" default="" />
    <arg name="fiducial_len_override" default="" />

    <node pkg="aruco_detect" name="aruco_detect" type="aruco_detect" output="screen" respawn="false">
        <param name="image_transport" value="compressed"/>
        <param name="publish_images" value="$(arg pub_fiducials)" />
        <param name="fiducial_len" value="$(arg fiducial_len)"/>
        <param name="dictionary" value="$(arg dictionary)"/>
        <param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
        <param name="vis_msgs" value="$(arg vis_msgs)"/>
        <param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
        <param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
        <remap from="camera/compressed" to="$(arg nodeName)/color/image/compressed"/>
        <remap from="camera_info" to="$(arg nodeName)/color/camera_info"/>
        <remap from="fiducial_images" to="$(arg nodeName)/color/fiducial_images"/>
        <remap from="fiducial_vertices" to="aruco_detect/fiducial_vertices"/>
        <remap from="fiducial_transforms" to="aruco_detect/fiducial_transforms"/>
    </node>
    
    <!-- Run a StatisticalOutlierRemoval filter to clean the data -->
    <!-- node pkg="nodelet" type="nodelet" name="sor_filter" args="load pcl/StatisticalOutlierRemoval pointcloud_manager" output="screen">
        <remap from="~input" to="/$(arg nodeName)/stereo/points" />
        <remap from="~output" to="/$(arg nodeName)/stereo/points_sor" />
        <rosparam>
          mean_k: 8
          stddev: 0.01
          negative: False
        </rosparam>
    </node -->
    
    <!-- Run a VoxelGrid filter to limit data to 7.5m and downsample the data -->
    <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pointcloud_manager" output="screen">
        <remap from="~input" to="/$(arg nodeName)/stereo/points" />
        <remap from="~output" to="/$(arg nodeName)/stereo/points_vox" />
        <rosparam>
          filter_field_name: z
          filter_limit_min: 0.01
          filter_limit_max: 8
          filter_limit_negative: False
          leaf_size: 0.01
        </rosparam>
    </node>
    
    <include file="$(find rplidar_ros)/launch/rplidar_publisher.launch" /> 
    <arg name="lidarName" default="rplidar"/>
    
    <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
        <rosparam command="load" file="$(find akros_test)/config/laser_filter_config.yaml" />
        <remap from="scan" to="$(arg lidarName)/scan" />
        <remap from="scan_filtered" to="$(arg lidarName)/scan_filtered" />
    </node>
    
    <!-- add node for bounding boxes -->
    
</launch>
