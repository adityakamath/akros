<?xml version="1.0"?>
<launch>
  <arg name="ns" default="depthai"/>
  <arg name="node_name" default="driver"/>
  <arg name="manager" default="true"/>
  <arg name="manager_name" default="$(arg ns)_manager"/>
  
  <arg name="queue_size" default="10"/>

  <group ns="$(arg ns)">

    <!-- Launch DepthAI nodelet manager  --> 
    <node pkg="nodelet" type="nodelet" args="manager" name="$(arg manager_name)"/>
    
    <!-- Convert /compressed messages to /image_raw messages  --> 
    <!-- node name="republish" type="republish" pkg="image_transport" args="compressed in:=mjpeg/compressed raw out:=mjpeg/image_raw"/ -->

    <!-- Convert depth image from mm (uint16) to m (float) units -->
    <node pkg="nodelet" type="nodelet" name="convert_metric" args="load depth_image_proc/convert_metric $(arg manager_name)">   
      <remap from="image_raw" to="depth/image_raw"/>
      <remap from="image" to="depth/image_m"/>        
    </node>  

    <!-- Register depth image to rgb camera -->
    <node pkg="nodelet" type="nodelet" name="register" args="load depth_image_proc/register $(arg manager_name)">   
      <remap from="rgb/camera_info" to="previewout/camera_info"/>      
      <remap from="depth/image_rect" to="depth/image_m"/>      
      <param name="queue_size" value="$(arg queue_size)"/>    
    </node>    
    
    <!-- Publish RGB pointcloud -->    
    <node pkg="nodelet" type="nodelet" name="point_cloud_xyzrgb" args="load depth_image_proc/point_cloud_xyzrgb $(arg manager_name)"> 
      <remap from="rgb/camera_info" to="previewout/camera_info"/>    
      <remap from="rgb/image_rect_color" to="previewout/image_raw"/>       
      <param name="queue_size" value="$(arg queue_size)"/>    
    </node>
    
    <!-- Publish fixed transform from depth optical frame to rgb optical frame --> 
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_publisher" args="0 0 0 0 0 0 depth previewout"/>
  </group>
  
  <!-- Publish tf -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find akros_test)/urdf/akros_top.urdf.xacro'"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="tf_prefix" value=""/>
  </node>
</launch>
